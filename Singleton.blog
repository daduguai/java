单例模式
顾名思义，单例模式即为只有一个实例。单例模式是设计模式中的经典的设计模式之一。我的个人理解，单例模式在某些情况下，系统中只需要一个对象实例，来进行系统资源的管理，例如：文件系统，数据库连接池，多线程连接池等

1.单例模式的规范：
1）私有构造函数
2）私有静态对象实例
3）共有的静态获取对象实例方法

2.单例模式的性能指标：
1）懒加载
2）是否线程安全
3）效率问题

3.单例模式的几种写法：
1）饿汉式
public class SingleTon{
  private static SingleTon instance=new SingleTon();
  private SingleTon(){}
  public static SingleTon getInstance(){
       return instance;
  }
}
2）懒汉式
public class SingleTon{
  private static SingleTon instance=null;
  private SingleTon(){}
  public static synchronized SingleTon getInstance(){
      if(instance==null){
          instance=new SingleTon();
      }
      return instance;
  }
}
3）内部类
public class Singleton{
  private static class Holder{
    private static final Sinleton INSTANCE=new Singleton();
  }
  private Singleton(){} 
  public static final Singleton getInstance(){
    return Holder.INSTANCE;
  }
}
4）双重检测机制
public class Singleton{
  private volatile static Singleton singleton;
  private Singleton(){}
  public static Singleton getSingleton(){
    if(singleton==null){
      synchronized(Singleton.class){
        if(singleton==null){
          singleton=new Singleton();
        }
      }
    }
    return singleton;
  }
}
5）枚举式
public enum Singleton{
  INSTANCE;
}
